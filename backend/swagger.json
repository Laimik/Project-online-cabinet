{
  "openapi": "3.0.0",
  "info": {
    "title": "Sample API",
    "description": "Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/auth/sign_up": {
      "post": {
        "tags": ["Auth"],
        "summary": "New user registration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All ok, user successfully registered"
          },
          "302": {
            "description": "User already registered"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/auth/sign_in": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "example@mail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "somepassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All ok, user successfully authenticated",
            "content":{
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Login or password is incorrect"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/addresses": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Get all user addresses",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "All ok, all addresses received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#components/schemas/Address"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "post": {
        "tags": [
          "Addresses"
        ],
        "summary": "Create new address",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All ok, address was create",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#components/schemas/Address"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/addresses/{id}": {
      "get": {
        "tags": ["Addresses"],
        "summary": "Get user address by id",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All ok, address received",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/Address"
                }
              }
            }
          },
          "404": {
            "description": "Address not found"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "put": {
        "tags": ["Addresses"],
        "summary": "Change address",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"

            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All ok, address changed",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/Address"
                }
              }
            }
          },
          "404": {
            "description": "Address not found"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "delete": {
        "tags": ["Addresses"],
        "summary": "Get user address by id",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All ok, address was deleted"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/counter_types": {
      "get": {
        "tags": [
          "CounterType"
        ],
        "summary": "Get all counter types",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "All ok, all counter type received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#components/schemas/CounterType"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/counter_types/{id}": {
      "get": {
          "tags": [
            "CounterType"
          ],
          "summary": "Get counter type by id",
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "All ok, counter type received",
              "content":{
                "application/json": {
                  "schema": {
                    "$ref": "#components/schemas/CounterType"
                  }
                }
              }
            },
            "404": {
              "description": "Counter type not found"
            },
            "500": {
              "description": "Something went wrong"
            }
          }
        }
      },
    "/api/v1/counters": {
      "get": {
        "tags": [
          "Counter"
        ],
        "summary": "Get all user counters",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "All ok, all counters received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#components/schemas/Counter"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Create new counter",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCounter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All ok, counter was create",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Counter"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/counters/{id}": {
      "get": {
        "tags": ["Counter"],
        "summary": "Get user counter by id",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All ok, counter received",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/Counter"
                }
              }
            }
          },
          "404": {
            "description": "Address not found"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "put": {
        "tags": ["Counter"],
        "summary": "Change counter",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"

            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCounter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All ok, counter changed",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Counter"
                }
              }
            }
          },
          "404": {
            "description": "Address not found"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "delete": {
        "tags": ["Counter"],
        "summary": "Delete user counter by id",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All ok, counter was deleted"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/counters/{counter_id}/values": {
      "get": {
        "tags": [
          "Counter value"
        ],
        "summary": "get all counter values",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "counter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All ok, get value for counter by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CounterValue"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "post": {
        "tags": [
          "Counter value"
        ],
        "summary": "Create new counter value",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "counter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCounterValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All ok, value for counter was registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CounterValue"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/counters/{counter_id}/values/{id}": {
      "get": {
        "tags": ["Counter value"],
        "summary": "get counter value by id",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "counter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All ok, counter received",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/Counter"
                }
              }
            }
          },
          "404": {
            "description": "Address not found"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "put": {
        "tags": ["Counter value"],
        "summary": "Change counter value",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "counter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"

            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCounterValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All ok, counter changed",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CounterValue"
                }
              }
            }
          },
          "404": {
            "description": "Counter value not found"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "delete": {
        "tags": ["Counter value"],
        "summary": "Delete counter values counter by id",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "counter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All ok, counter value was deleted"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    }
  },


  "components": {
    "schemas": {
      "User": {
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          }
        }
      },
      "NewAddress": {
        "properties": {
          "address": {
            "type": "string"
          },
          "apartments": {
            "type": "integer"
          },
          "fias_code": {
            "type": "string"
          }
        }
      },
      "Address": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "address": {
            "type": "string"
          },
          "apartments": {
            "type": "integer"
          },
          "fias_code": {
            "type": "string"
          }
        }
      },
      "CounterType": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Counter": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "address_id": {
            "type": "integer"
          },
          "counter_type_id": {
            "type": "integer"
          }
        }
      },
      "NewCounter": {
        "properties": {
          "name": {
            "type": "string"
          },
          "address_id": {
            "type": "integer"
          },
          "counter_type_id": {
            "type": "integer"
          }
        }
      },
      "CounterValue": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "registry_time": {
            "type": "string",
            "example": "2020-08-26",
            "format": "date"
          },
          "value": {
            "type": "number",
            "example": 15.6,
            "format": "float"
          }
        }
      },
      "NewCounterValue": {
        "properties": {
          "registry_time": {
            "type": "string",
            "example": "2020-08-26",
            "format": "date"
          },
          "value": {
            "type": "number",
            "example": 15.6,
            "format": "float"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type":"http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
